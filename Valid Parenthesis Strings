#Given a string s containing only three types of characters: '(', ')' and '*', return true if s is valid.

#The following rules define a valid string:

#Any left parenthesis '(' must have a corresponding right parenthesis ')'.
#Any right parenthesis ')' must have a corresponding left parenthesis '('.
#Left parenthesis '(' must go before the corresponding right parenthesis ')'.
#'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string "".

class Solution:
    def checkValidString(self, s: str) -> bool:
        l,r=0,0
        for i in s:
            if i =="(":
                l,r=l+1,r+1
            elif i==")":
                l,r=l-1,r-1
            else:
                l,r=l-1,r+1
            if r<0:
                return False
            if l<0:  #For the case of s = ( * ) (
                
                l=0
        return l==0
        
